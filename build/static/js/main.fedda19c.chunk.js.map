{"version":3,"sources":["chatbox/RightColumn/Chat.js","chatbox/RightColumn/RightHeader.js","chatbox/RightColumn/RightColumn.js","chatbox/LeftColumn/SettingsModal/SettingsModal.js","chatbox/LeftColumn/LeftColumnHeader/LeftColumnHeader.js","chatbox/LeftColumn/LeftColumnChats/LeftColumnChats.js","chatbox/LeftColumn/LeftColumnFooter/LeftColumnFooter.js","chatbox/LeftColumn/LeftColumn.js","chatbox/SubmitButton/SubmitForm.js","api/api.js","chatbox/Chatbox.js","App.js","serviceWorker.js","index.js"],"names":["Chat","_ref","questions","answers","currentChat","containerRef","useRef","useEffect","container","current","scrollTop","scrollHeight","React","createElement","reversedAnswers","slice","reverse","reversedQuestions","Fragment","className","ref","map","answer","idx","key","concat","RightHeader","totalMessages","length","RightColumn","SettingsModal","isOpen","handleModal","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","onClick","action","onSubmit","e","preventDefault","localStorage","setItem","htmlFor","type","placeholder","value","onChange","target","LeftColumnHeader","addChatRoom","FontAwesomeIcon","icon","_faPlus","style","color","border","borderRadius","padding","LeftColumnChats","chats","onChatClick","deleteChat","confirmDelete","setConfirmDelete","handleConfirmDelete","prevValue","chat","id","title","_faCheck","_faXmark","_faTrashCan","LeftColumnFooter","href","rel","_faGithub","size","_faGear","LeftColumn","isSettingsModalOpen","setSettingsModalOpen","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Submit","question","setQuestion","_useState3","_useState4","topic","setPrompt","_useState5","_useState6","loading","setLoading","handleSubmit","_x","_handleSubmit","apply","arguments","_asyncToGenerator","_callee","event","_context","t0","console","cols","rows","onKeyDown","shiftKey","_faPaperPlane","_require","require","Configuration","OpenAIApi","configuration","apiKey","process","openai","_fetchChatCompletion","trim","createChatCompletion","model","messages","role","content","generateContent","generatePrompt","temperature","log","data","choices","message","response","status","capitalized","toUpperCase","toLowerCase","fetchChatCompletion","_x2","Chatbox","tempChat","uuidv4","chatRooms","setChatRooms","setCurrentChat","getItem","JSON","parse","storedChatRooms","stringify","handleSubmission","prevChat","_objectSpread","_toConsumableArray","prevChatRooms","updatedChatRooms","chatRoomIndex","findIndex","updatedChatRoom","newChat","selectedChat","find","chatId","newChatRooms","filter","SubmitForm","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fedda19c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./RightColumn.css\";\n\nconst Chat = ({ questions, answers, currentChat }) => {\n  //  This forces the scroll bar to go to the bottom on chat openings.\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    container.scrollTop = container.scrollHeight;\n  }, []);\n\n  // required to allow messages to load otherwise it would error out\n  if (currentChat === null) {\n    return <div>Loading...</div>;\n  }\n\n  const reversedAnswers = answers.slice().reverse();\n  const reversedQuestions = questions.slice().reverse();\n  return (\n    <>\n      <div className=\"results\" ref={containerRef}>\n        {reversedAnswers.map((answer, idx) => (\n          <React.Fragment key={`msg-${idx}`}>\n            <div className=\"msg-answer\" key={`answer-${idx}`}>\n              {answer}\n            </div>\n            <div className=\"msg-question\" key={`question-${idx}`}>\n              {reversedQuestions[idx]}\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./RightColumn.css\";\n\nconst RightHeader = ({ totalMessages }) => {\n  if (totalMessages === null) {\n    return <div>Loading...</div>;\n  }\n  const { answers } = totalMessages;\n\n  return (\n    <>\n      <div className=\"header-container\">\n        <div className=\"header\">\n          myFitness Bot <br></br>\n          {answers.length} messages\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RightHeader;\n","import React from \"react\";\nimport Chat from \"./Chat\";\nimport RightHeader from \"./RightHeader\";\nimport \"./RightColumn.css\";\n\nconst RightColumn = ({ currentChat }) => {\n  if (currentChat === null) {\n    return <div>Loading...</div>;\n  }\n\n  // currentChat is parsed from localStorage in Chatbox.js\n  // we are now destructuring the answers array, and questions array from the object.\n  const { answers, questions } = currentChat;\n\n  return (\n    <>\n      <RightHeader totalMessages={currentChat} />\n      <Chat questions={questions} answers={answers} />\n    </>\n  );\n};\n\nexport default RightColumn;\n","import React, { useState } from \"react\";\nimport \"./SettingsModal.css\";\n\nconst SettingsModal = ({ isOpen, handleModal }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    localStorage.setItem(\"apiKey\", inputValue);\n  };\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h2>Settings</h2>\n          <button className=\"close-button\" onClick={handleModal}>\n            X\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <form action=\"\" onSubmit={handleSubmit}>\n            <label htmlFor=\"api-key\">Open AI Api-Key</label>\n            <input\n              type=\"password\"\n              placeholder=\"OpenAI Api Key\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n            />\n            <button className=\"modal-button\">Save</button>\n          </form>\n        </div>\n        <div className=\"modal-footer\">\n          <></>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsModal;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\n\nconst LeftColumnHeader = ({ addChatRoom }) => {\n  return (\n    <div className=\"left-header-container\">\n      <div className=\"left-header\">CustomGPT</div>\n      <div className=\"add-chat\" onClick={addChatRoom}>\n        <FontAwesomeIcon\n          icon={solid(\"plus\")}\n          style={{\n            color: \"#3881ff\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n            padding: \"5px\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LeftColumnHeader;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { regular, solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\n\nconst LeftColumnChats = ({ chats, onChatClick, deleteChat }) => {\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  const handleConfirmDelete = () => {\n    setConfirmDelete((prevValue) => !prevValue);\n  };\n\n  return (\n    <>\n      {chats.map((chat) => (\n        <div\n          className=\"chat-room\"\n          key={chat.id}\n          onClick={() => onChatClick(chat.id)}\n        >\n          Chat ID: {chat.title}\n          <div>\n            {confirmDelete && (\n              <>\n                <button className=\"chat-delete\">\n                  <FontAwesomeIcon\n                    style={{ padding: \"100%\" }}\n                    onClick={() => {\n                      deleteChat(chat.id);\n                      handleConfirmDelete();\n                    }}\n                    icon={solid(\"check\")}\n                  />\n                </button>\n                <button className=\"chat-cancel\">\n                  <FontAwesomeIcon\n                    style={{ padding: \"100%\" }}\n                    onClick={() => handleConfirmDelete()}\n                    icon={solid(\"xmark\")}\n                  />\n                </button>\n              </>\n            )}\n            {!confirmDelete && (\n              <button className=\"chat-trash\">\n                <FontAwesomeIcon\n                  style={{ padding: \"100%\" }}\n                  onClick={() => handleConfirmDelete()}\n                  icon={regular(\"trash-can\")}\n                />\n              </button>\n            )}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default LeftColumnChats;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { icon } from \"@fortawesome/fontawesome-svg-core/import.macro\";\n\nconst LeftColumnFooter = ({ handleModal }) => {\n  return (\n    <div className=\"left-column-footer\">\n      <a\n        href=\"https://github.com/dfinkle1/custom-gpt\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon\n          icon={icon({ name: \"github\", style: \"brands\" })}\n          size=\"xl\"\n        />\n      </a>\n\n      <div className=\"settings\">\n        <button className=\"settings-btn\" onClick={handleModal}>\n          <FontAwesomeIcon icon={icon({ name: \"gear\" })} size=\"xl\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftColumnFooter;\n","import React, { useState } from \"react\";\nimport \"./LeftColumn.css\";\nimport SettingsModal from \"./SettingsModal/SettingsModal\";\nimport LeftColumnHeader from \"./LeftColumnHeader/LeftColumnHeader\";\nimport LeftColumnChats from \"./LeftColumnChats/LeftColumnChats\";\nimport LeftColumnFooter from \"./LeftColumnFooter/LeftColumnFooter\";\n\nconst LeftColumn = ({ addChatRoom, chats, onChatClick, deleteChat }) => {\n  const [isSettingsModalOpen, setSettingsModalOpen] = useState(false);\n  const handleModal = () => {\n    setSettingsModalOpen((prevValue) => !prevValue);\n  };\n\n  return (\n    <>\n      <SettingsModal isOpen={isSettingsModalOpen} handleModal={handleModal} />\n      <LeftColumnHeader addChatRoom={addChatRoom} />\n      <LeftColumnChats\n        chats={chats}\n        onChatClick={onChatClick}\n        deleteChat={deleteChat}\n      />\n      <LeftColumnFooter handleModal={handleModal} />\n    </>\n  );\n};\n\nexport default LeftColumn;\n","import React, { useState } from \"react\";\nimport \"./SubmitForm.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { icon } from \"@fortawesome/fontawesome-svg-core/import.macro\";\n\nconst Submit = ({ onSubmit }) => {\n  const [question, setQuestion] = useState(\"\");\n  const [topic, setPrompt] = useState(\"\");\n  // If sending a message remove the send button and show loading.\n  const [loading, setLoading] = useState(false);\n\n  // Take form data value and pass it into onSubmit, which is a passed down\n  //function from Chatbox.\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      setLoading(true);\n      await onSubmit(topic, question);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n      setQuestion(\"\");\n    }\n  }\n\n  //Allow the user to press enter to submit, alternatively they can also click send.\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"submit-form\">\n        <form className=\"form-content\" onSubmit={handleSubmit}>\n          <div className=\"submit-wrapper\">\n            <select\n              className=\"custom-select\"\n              onChange={(e) => setPrompt(e.target.value)}\n            >\n              <option\n                className=\"option\"\n                value={`You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible. Knowledge cutoff: {knowledge_cutoff} Current date: {current_date}`}\n              >\n                Ask Anything!\n              </option>\n              <option value=\"You are a fitness trainer. Your main goal is providing strength training and avoiding workouts with high injury rates. Provide 3 different workouts, include rep ranges and information on intensity\">\n                Workout Assistance: Type out a muscle\n                (back,biceps,chest,arms,legs,quads,etc...)\n              </option>\n              <option value=\"I want you to tell me a joke about pokemon\">\n                Get a Pokemon joke!\n              </option>\n              <option value=\"I want you to act as a personal chef and suggest a healthy meal plan for the week. The user will either give you a calorie goal, or their body specifics\">\n                Get a meal plan for the week! (Provide Calorie Range. Or submit\n                Weight,height,gender, goal(gain weight or lose weight) )\n              </option>\n            </select>\n            <textarea\n              className=\"text-box\"\n              name=\"question\"\n              id=\"question\"\n              cols=\"30\"\n              rows=\"10\"\n              placeholder=\"Ask a question\"\n              value={question}\n              onChange={(e) => setQuestion(e.target.value)}\n              onKeyDown={handleKeyDown}\n            ></textarea>\n            <button type=\"submit\" className=\"send-btn\">\n              {loading ? (\n                <span>Loading...</span>\n              ) : (\n                <FontAwesomeIcon\n                  icon={icon({ name: \"paper-Plane\" })}\n                  size=\"xl\"\n                  style={{ color: \"#3881ff\" }}\n                />\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Submit;\n","const { Configuration, OpenAIApi } = require(\"openai\");\nconst configuration = new Configuration({\n  apiKey:\n    process.env.REACT_APP_OPENAI_API_KEY || localStorage.getItem(\"apiKey\"),\n});\nconst openai = new OpenAIApi(configuration);\n\nasync function fetchChatCompletion(topic, question) {\n  if (!configuration.apiKey) {\n    throw new Error(\"OpenAI API key not configured.\");\n  }\n\n  if (question.trim().length === 0) {\n    throw new Error(\"Please enter a valid prompt.\");\n  }\n\n  try {\n    const completion = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        {\n          role: \"system\",\n          content: generateContent(topic),\n        },\n        { role: \"user\", content: generatePrompt(question) },\n      ],\n      temperature: 0.6,\n    });\n    console.log(completion);\n    return completion.data.choices[0].message.content;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(`${error.response.status}: ${error.response.data}`);\n    } else {\n      throw new Error(`Error with OpenAI API request: ${error.message}`);\n    }\n  }\n}\n\nfunction generateContent(topic) {\n  return `${topic}`;\n}\n\nfunction generatePrompt(question) {\n  const capitalized =\n    question[0].toUpperCase() + question.slice(1).toLowerCase();\n  return `${capitalized}`;\n}\n\nexport default fetchChatCompletion;\n","import React, { useEffect, useState } from \"react\";\nimport RightColumn from \"./RightColumn/RightColumn\";\nimport LeftColumn from \"./LeftColumn/LeftColumn\";\nimport SubmitForm from \"./SubmitButton/SubmitForm\";\nimport fetchChatCompletion from \"../api/api\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./Chatbox.css\";\n\nconst Chatbox = () => {\n  const tempChat = {\n    id: uuidv4(),\n    title: \"new chat\",\n    questions: [],\n    answers: [],\n  };\n  // parses localStorage, and sets all chatRooms into an array\n  const [chatRooms, setChatRooms] = useState([]);\n  // on click method is used to set the current chat being used. User clicks a chat\n  // , and thats the main chat on screen.\n  const [currentChat, setCurrentChat] = useState(null);\n\n  //gather chatroom information on mount from local storage\n  useEffect(() => {\n    const current = localStorage.getItem(\"currentChat\");\n    if (current) {\n      setCurrentChat(JSON.parse(current));\n    } else {\n      setCurrentChat(tempChat);\n      setChatRooms([tempChat]);\n    }\n    const storedChatRooms = localStorage.getItem(\"chatRooms\");\n    if (storedChatRooms) {\n      setChatRooms(JSON.parse(storedChatRooms));\n    }\n  }, []);\n\n  //adds a new chatRoom to localStorage if the state changes on chatRooms\n  useEffect(() => {\n    localStorage.setItem(\"chatRooms\", JSON.stringify(chatRooms));\n  }, [chatRooms]);\n\n  //\n  useEffect(() => {\n    localStorage.setItem(\"currentChat\", JSON.stringify(currentChat));\n  }, [currentChat]);\n\n  // handleCurrent  onClick method to set the currentChatRoom\n  const handleCurrent = (current) => {\n    console.log(current);\n    const selectedChat = chatRooms.find((chat) => chat.id === current);\n    const { questions, answers, title } = selectedChat;\n    setCurrentChat({\n      id: current,\n      title: title,\n      questions: [...questions],\n      answers: [...answers],\n    });\n  };\n\n  // Requests data from SubmitButton form, and pass it into api request.\n  // take the response and set the question and the fetched answer to localStorage\n  //we then pass the answers/questions into right column to display info\n  const handleSubmission = async (topic, question) => {\n    try {\n      const response = await fetchChatCompletion(topic, question);\n      setCurrentChat((prevChat) => ({\n        ...prevChat,\n        title: prevChat.title,\n        questions: [...prevChat.questions, question],\n        answers: [...prevChat.answers, response],\n      }));\n      // updates all chatrooms with the new information of the one we just asked a question to\n      setChatRooms((prevChatRooms) => {\n        const updatedChatRooms = [...prevChatRooms];\n        const chatRoomIndex = chatRooms.findIndex(\n          (chat) => chat.id === currentChat.id\n        );\n        if (chatRoomIndex !== -1) {\n          const updatedChatRoom = {\n            ...updatedChatRooms[chatRoomIndex],\n            questions: [...updatedChatRooms[chatRoomIndex].questions, question],\n            answers: [...updatedChatRooms[chatRoomIndex].answers, response],\n          };\n          updatedChatRooms[chatRoomIndex] = updatedChatRoom;\n        }\n\n        return updatedChatRooms;\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // A button to add a new chat room.\n  const addChatRoom = () => {\n    const newChat = {\n      id: uuidv4(),\n      title: \"new chat\",\n      questions: [],\n      answers: [],\n    };\n    const updatedChatRooms = [...chatRooms, newChat];\n    setChatRooms(updatedChatRooms);\n    localStorage.setItem(\"chatRooms\", JSON.stringify(updatedChatRooms));\n  };\n\n  const deleteChat = (chatId) => {\n    console.log(chatId);\n    const newChatRooms = chatRooms.filter((chat) => chat.id !== chatId);\n    setChatRooms(newChatRooms);\n  };\n\n  return (\n    <div className=\"Chatbox-container\">\n      <div className=\"column-left\">\n        <LeftColumn\n          addChatRoom={addChatRoom}\n          chats={chatRooms}\n          onChatClick={handleCurrent}\n          currentChat={currentChat}\n          deleteChat={deleteChat}\n        />\n      </div>\n      <div className=\"column-right\">\n        <RightColumn currentChat={currentChat} />\n        <SubmitForm onSubmit={handleSubmission} />\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbox;\n","import React from \"react\";\nimport Chatbox from \"./chatbox/Chatbox\";\nimport \"./App.css\";\n// import dotenv from 'dotenv'\n// require(\"dotenv\").config();\n\n// console.log(process.env.OPENAI_API_KEY);\n\nfunction App() {\n  return (\n    <>\n      <h1>Still in development</h1>\n      <Chatbox />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}